{"version":3,"sources":["Components/Pages/Home.js","Components/Pages/About.js","Components/Pages/List.js","Components/Pages/NotFound.js","Components/Pages/Comment.js","Components/Pages/CommentList.js","Components/Pages/Article.js","Components/Pages/ArticleList.js","Components/Pages/NavBar.js","article-content.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","About","List","articlesContent","this","props","map","article","key","name","to","title","content","substring","NotFound","Comment","state","username","comment","handleUpdate","bind","handleClick","e","type","target","value","setState","addComment","htmlFor","id","onChange","onClick","CommentList","comments","text","Article","match","params","articleContent","find","filteredArticles","filter","currArticle","articleInfo","articlesInfo","articleComments","JSON","parse","console","log","handleUpvote","upvotes","paragraph","ArticleList","NavBar","articles","App","isLoaded","fetch","then","response","json","jsonResponse","method","oldInfo","index","findIndex","body","stringify","headers","path","component","exact","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0684cd4b.chunk.js","sourcesContent":["import React from 'react';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                <h1>Welcome to my blog!</h1>\n\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et \n                dolore magna aliqua. Nec ullamcorper sit amet risus nullam eget felis eget. Venenatis lectus magna fringilla urna.\n                Nisl condimentum id venenatis a condimentum vitae sapien. Elit at imperdiet dui accumsan sit amet. Porta nibh venenatis cras sed felis eget velit aliquet. \n                Malesuada nunc vel risus commodo. Vitae sapien pellentesque habitant morbi tristique senectus et netus. Vulputate dignissim suspendisse in est ante in nibh mauris cursus. \n                Pharetra massa massa ultricies mi quis hendrerit dolor magna eget.</p>\n\n                <p>Mi quis hendrerit dolor magna eget est. Quisque id diam vel quam elementum pulvinar. Auctor elit sed vulputate mi sit amet. \n                Nibh venenatis cras sed felis eget. Et malesuada fames ac turpis egestas sed tempus urna et. \n                Urna neque viverra justo nec ultrices dui sapien eget mi. Nisl vel pretium lectus quam id leo. \n                Urna duis convallis convallis tellus id interdum velit. Sed egestas egestas fringilla phasellus faucibus scelerisque eleifend donec. \n                Semper eget duis at tellus at urna condimentum mattis pellentesque.\n                Vehicula ipsum a arcu cursus vitae congue mauris rhoncus.</p>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass About extends React.Component {\n\n    render() {\n        return (\n            <>\n                <h1>About Me!</h1>\n\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et \n                dolore magna aliqua. Nec ullamcorper sit amet risus nullam eget felis eget. Venenatis lectus magna fringilla urna.\n                Nisl condimentum id venenatis a condimentum vitae sapien. Elit at imperdiet dui accumsan sit amet. Porta nibh venenatis cras sed felis eget velit aliquet. \n                Malesuada nunc vel risus commodo. Vitae sapien pellentesque habitant morbi tristique senectus et netus. Vulputate dignissim suspendisse in est ante in nibh mauris cursus. \n                Pharetra massa massa ultricies mi quis hendrerit dolor magna eget.</p>\n                \n            </>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass List extends React.Component {\n    render() {\n        const articlesContent = this.props.articlesContent;\n        return (\n            <div className=\"article-container\">\n                {articlesContent.map(article => (\n                    <div key={article.name} className=\"article-item\">\n                        <Link to={`/article/${article.name}`} className=\"article-link\">\n                            <h3>{article.title}</h3>\n                            <p>{article.content[0].substring(0,175)}...</p>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <h1>404: Page Not Found</h1>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            comment: ''\n        };\n\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleUpdate(e) {\n        const type = e.target.name;\n        const value = e.target.value;\n        this.setState({\n            [type]: value\n        });\n    }\n\n    handleClick() {\n        const username = this.state.username;\n        const comment = this.state.comment;\n        this.setState({username: '', comment: ''});\n        this.props.addComment({username, comment}, this.props.name);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Add A Comment:</h3>            \n                <form>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input type=\"text\" name=\"username\" id=\"username\" value={this.state.username} onChange={this.handleUpdate}></input>\n                    <br />\n                    <label htmlFor=\"comment\">Comment:</label>\n                    <textarea type=\"text\" name=\"comment\" id=\"comment\" value={this.state.comment} onChange={this.handleUpdate}></textarea>\n                    <br />                    \n                </form>\n                <button onClick={this.handleClick}>Submit</button>\n            </div>            \n        )\n    }\n}\n\nexport default Comment;","import React from 'react';\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n    render() {\n        return (\n            <div>\n                <Comment addComment={this.props.addComment} name={this.props.name} />\n                <h3>Comments:</h3>\n                {this.props.comments.map((comment,key) => (\n                    <div className=\"comment\" key={key}>\n                        <h4>{comment.username}</h4>\n                        <p>{comment.text}</p>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default CommentList;","import React from 'react';\n\nimport List from './List';\nimport NotFound from './NotFound';\nimport CommentList from './CommentList';\n\n\nclass Article extends React.Component {       \n\n    render() {\n        const name = this.props.match.params.name;\n        const articlesContent = this.props.articlesContent;        \n        const articleContent = articlesContent.find(article => article.name === name);\n        if (!articleContent) return <NotFound />\n        const filteredArticles = articlesContent.filter(currArticle => currArticle !== articleContent);\n\n        const articleInfo = this.props.articlesInfo.find(article => article.name ===  name); \n        const articleComments = JSON.parse(articleInfo.comments)\n        console.log(articleComments);   \n    \n        return (\n            <>\n                <h1>{articleContent.title}</h1>\n\n                <button onClick={() => this.props.handleUpvote(name)}>Upvote!</button>\n                <p>This article has {articleInfo.upvotes} upvotes.</p>              \n\n\n                {articleContent.content.map((paragraph, key) => (\n                    <p key={key}>{paragraph}</p>\n                ))}\n\n                <CommentList comments={articleComments} addComment={this.props.addComment} name={name} />\n\n                <h3>Other Articles You Might Enjoy...</h3>\n                <List articlesContent={filteredArticles} />                \n            </>\n        )\n    }\n}\n\nexport default Article;","import React from 'react';\n\nimport List from './List';\n\n\n\nclass ArticleList extends React.Component {\n    \n    render() {\n        return (\n            <div>\n                <h1>Articles Featured on Our Blog</h1>\n                <List articlesContent={this.props.articlesContent}/>\n            </div>            \n        )\n    }\n}\n\nexport default ArticleList;","import React from 'react';\nimport {Link} from 'react-router-dom';\nclass NavBar extends React.Component {\n    render() {\n        return (\n           <nav>\n               <ul className=\"nav-container\">\n                   <li className=\"nav-element\" >\n                       <Link to=\"/\" className=\"nav-link\">Home</Link>\n                   </li>\n                   <li className=\"nav-element\">\n                       <Link to=\"/about\" className=\"nav-link\">About</Link>\n                   </li>\n                   <li className=\"nav-element\">\n                       <Link to=\"/articlelist\" className=\"nav-link\">Articles</Link>\n                   </li>\n               </ul>\n           </nav> \n        )\n    }\n}\n\nexport default NavBar;\n","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\n\nimport Home from '../Pages/Home';\nimport About from '../Pages/About';\nimport Article from '../Pages/Article';\nimport ArticleList from '../Pages/ArticleList';\nimport NavBar from '../Pages/NavBar';\nimport articleContent from '../../article-content';\nimport NotFound from '../Pages/NotFound';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articleContent: articleContent,\n      articleInfo: [],\n      isLoaded: false,\n    };\n\n    this.handleUpvote = this.handleUpvote.bind(this);    \n    this.addComment = this.addComment.bind(this);\n  }\n\n  componentDidMount() {    \n    fetch('/api/articles')\n      .then(response => response.json())\n      .then(jsonResponse => this.setState({articleInfo: jsonResponse}))\n      .then(() => this.setState({isLoaded: true})); \n  }\n\n\n\n  handleUpvote(name) {\n    fetch(`/api/articles/${name}/upvote`, {method: 'post'})\n    .then(response => response.json())\n    .then(jsonResponse => {\n      const oldInfo = this.state.articleInfo;\n      const index = oldInfo.findIndex(article => article.name = jsonResponse.name);\n      oldInfo[index] = jsonResponse;\n      this.setState({articleInfo: oldInfo});\n    });    \n\n  }\n\n  addComment(state, name) {    \n    fetch(`/api/articles/${name}/comment`, {\n        method: 'post',\n        body: JSON.stringify({username: state.username, text: state.comment}),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }\n      ).then(response => response.json())\n      .then(jsonResponse => {\n        const oldInfo = this.state.articleInfo;\n        const index = oldInfo.findIndex(article => article.name = jsonResponse.name);\n        oldInfo[index] = jsonResponse;\n        this.setState({articleInfo: oldInfo});\n      });\n  }\n   \n  render() {\n    return (\n      \n      <Router>\n        <NavBar />\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" component={Home} exact /> \n            <Route path=\"/about\" component={About} />\n            {\n              this.state.isLoaded ? \n              <>\n                <Route path=\"/articlelist\" render={(props) => (<ArticleList articlesContent={this.state.articleContent} articlesInfo={this.state.articleInfo} {...props} />)}/>\n                <Route path=\"/article/:name\" render={(props) => (<Article articlesContent={this.state.articleContent} articlesInfo={this.state.articleInfo} handleUpvote={this.handleUpvote} addComment={this.addComment} {...props} />)} />             \n              </>\n              : \"\"\n            }\n            \n            <Route component={NotFound} />\n          </Switch>         \n                \n        </div>\n      </Router>\n      \n      \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}